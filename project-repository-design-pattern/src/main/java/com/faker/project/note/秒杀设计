原则：
1. 请求尽量拦截在系统上游
2. 读多写少的多使用缓存

解决方案实现：

系统：
    1.独立域名部署，避免冲击

前端层：
    1.客户端js交互限制，x秒内只限制提交一次，比如微信摇一摇
    2.页面资源静态化，请求不经过应用

网络宽带：
    1.秒杀商品缓存再CDN，新增带宽

站点层：
    1.一个用户一个uid，5秒只允许透过一个请求，其他返回错误提示

服务层：
    1.写请求放入队列，每次只通过有限的写请求到数据层，比如2000个车票，先写入队列，然后从队列写入数据库，成功则放下一批，如果余票不够，则队列的请求返回"已售完"，可以避免大量请求直接写数据库
    2.
    3.模糊化，比如车票查询，显示有无票代替剩余多少张

数据库层：
    1.数据库锁机制进行控制



